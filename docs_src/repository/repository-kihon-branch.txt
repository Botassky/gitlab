.. _repository-kihon-branch:

ブランチ
==================================================
「ブランチ」はリポジトリ内に存在し、履歴を記録しているエリアです。デフォルトで用意されるブランチ、自分で作成するブランチなどがあります。

.. _repository-kihon-branch-local:

ブランチの種類
--------------------------------------------------

master ブランチ（リモートリポジトリ / ローカルリポジトリ）
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
最初のコミットを行うと ``master`` ブランチが作成されます（ "C1" は 1 回目のコミット（ commit ）の意味です）。

.. image:: img/pic2.png
   :scale: 100%

コミットするたびにブランチ内の履歴は延びていきます。コミットを 3 回行った後の状態です。

.. image:: img/pic3.png
   :scale: 100%

ブランチ内で現在指している履歴の場所を ``HEAD`` と呼びます。デフォルトはブランチの先頭の履歴を指しています。 ``HEAD`` を組み合わせたイメージです。

.. image:: img/pic4.png
   :scale: 100%

``HEAD`` が指す位置を変更すると、各ファイルは ``HEAD`` の位置が示す内容に変更されます。

.. _repository-kihon-branch-remote:

ローカルリポジトリ内のリモートリポジトリのブランチのクローン
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
リモートリポジトリも内部に ``master`` ブランチ（リモートブランチ）を持ちます。リモートリポジトリをクローンしたとき、このブランチもクローンされてローカルリポジトリに格納されます。この格納されたブランチが ``origin/master`` ブランチです。 ``origin`` はクローン元のリモートリポジトリを指します。ブランチ内の履歴の場所を指す ``origin/HEAD`` もあります。

``origin/master`` ブランチはリモートブランチの状態を維持し、プッシュ・プル・フェッチを実行したときに状態を更新（リモートブランチと同期）します。このように ``origin/master`` ブランチはリモートリブランチの状態を追いかけるので「リモート追跡ブランチ」または「追跡ブランチ」と呼びます。プル・プッシュ・フェッチはリモート追跡ブランチ経由で行われ、その結果リモート追跡ブランチはリモートブランチと同期します。

まとめ
""""""""""""""""""""""""""""""""""""""""""""""""""

.. list-table::
   :widths: 1, 1, 2

   * - ブランチ
     - 存在する場所
     - 説明
   * - ローカルブランチ
     - ローカルリポジトリ
     - ``master`` ブランチ
   * - リモート追跡ブランチ
     - ローカルリポジトリ
     - ``origin/master`` ブランチ、リモートブランチの内容を追跡している
   * - リモートブランチ
     - リモートリポジトリ
     - ``master`` ブランチ

.. _repository-kihon-branch-commit:

コミット
--------------------------------------------------

行っていること
"""""""""""""""""""""""""""""""""""""""""""""""""""

現時点の状態をリポジトリに反映させる動作を「コミット」と呼びます。コミットは次の情報をリポジトリに保存します。

- その時点のローカルリポジトリのスナップショット
- コミット時のコメントなどのメタ情報

等々

コミットの流れ（イメージ）
"""""""""""""""""""""""""""""""""""""""""""""""""""

編集した :file:`abc.txt` ファイルをコミットする流れ（イメージ）です。

#. コミット前

   .. image:: img/pic5.png
      :scale: 100%

#. 編集した :file:`abc.txt` ファイルをステージングエリアに登録

   ステージングエリアに登録したファイルがコミットの対象になります。ステージングエリアがあることで、リポジトリに登録しなくても良いファイルを除外できます。

   .. image:: img/pic6.png
      :scale: 100%

#. ステージングエリアの **ファイル全体のコメント** を付けてコミット

   コミット後の状態です。 ``master`` ブランチ内の履歴が延び、 ``head`` は先端の履歴を指し直します。ファイルの保管場所内のファイルは、編集済みファイルに更新されます。

   .. image:: img/pic7.png
      :scale: 100%

プッシュ
--------------------------------------------------
ローカルリポジトリの内容をリモートリポジトリに反映します。反映されるのはコミットしたファイルです。プッシュできるのは「 **リモートブランチの履歴がリモート追跡ブランチの履歴よりも新しくない** とき」です。先に他の人がプッシュ済みのときは、リモート追跡ブランチよりリモートブランチの履歴が新しいためプッシュに失敗します。
これは他の人の修正を壊さない（上書きして消さない）ための安全装置として働きます。

プッシュに失敗したときはプルを実行し、リモートリポジトリの変更内容をローカルリポジトリ取り込み、その後「コミット　→　プッシュ」を行います。

プル
--------------------------------------------------
リモートリポジトリとローカルリポジトリの差異をローカルリポジトリ内に反映します。反映対象がファイルの場合、ローカルリポジトリ内のコミット済みのファイルに反映されます。未コミットのファイルがが反映対象になった場合、プルに失敗します。こらは自分の修正を壊さない（上書きして消されない）ための安全装置として働きます。

プルに失敗したときは、ローカルリポジトリ内の対象ファイルをコミットするとか、削除または別のフォルダーへ移動します。その後もう一度プルをを行います。
